{"version":3,"file":"text-result-lazy.min.js","sources":["../src/text-result-lazy.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Live poll text result for poll rendering.\n *\n * @copyright Copyright (c) 2018 Open LMS\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\"jquery\", \"mod_livepoll/result\"],\n    function($, Result) {\n        /**\n         * Text result constructor.\n         * @returns {TextResult}\n         * @constructor\n         */\n        function TextResult() {\n            Result.call(this);\n            return (this);\n        }\n\n        // Prototype extension.\n        TextResult.prototype = Object.create(Result.prototype);\n\n        /**\n         * Renders the text result.\n         * @param {array} options\n         * @param {array} votes\n         */\n        TextResult.prototype.renderResult = function(options, votes) {\n            var totalVotes = 0;\n            $.each(options, function(optionid) {\n                $(\"#vote-count-\" + optionid).text(votes[optionid]);\n                totalVotes += votes[optionid];\n            });\n            $(\".mod-livepoll-totalvotes\").text(totalVotes);\n        };\n\n        /**\n         * @param {array} options\n         * @param {array} votes\n         * @param {function} callback\n         */\n        TextResult.prototype.performUpdate = function(options, votes, callback) {\n            this.renderResult(options, votes);\n            callback();\n        };\n\n        return (TextResult);\n    }\n);"],"names":["define","$","Result","TextResult","call","this","prototype","Object","create","renderResult","options","votes","totalVotes","each","optionid","text","performUpdate","callback"],"mappings":";;;;;;AAqBAA,uCAAO,CAAC,SAAU,wBACd,SAASC,EAAGC,iBAMCC,oBACLD,OAAOE,KAAKC,MACJA,YAIZF,WAAWG,UAAYC,OAAOC,OAAON,OAAOI,WAO5CH,WAAWG,UAAUG,aAAe,SAASC,QAASC,WAC9CC,WAAa,EACjBX,EAAEY,KAAKH,SAAS,SAASI,UACrBb,EAAE,eAAiBa,UAAUC,KAAKJ,MAAMG,WACxCF,YAAcD,MAAMG,aAExBb,EAAE,4BAA4Bc,KAAKH,aAQvCT,WAAWG,UAAUU,cAAgB,SAASN,QAASC,MAAOM,eACrDR,aAAaC,QAASC,OAC3BM,YAGId"}
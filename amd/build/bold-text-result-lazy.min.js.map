{"version":3,"file":"bold-text-result-lazy.min.js","sources":["../src/bold-text-result-lazy.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Live poll shiny decorated text result for poll rendering.\n *\n * @copyright Copyright (c) 2018 Open LMS\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\"jquery\", \"mod_livepoll/util\", \"mod_livepoll/decorated-text-result\"],\n    function($, util, DecoratedTextResult) {\n        /**\n         * Text result constructor.\n         * @param {function} decoratedResult\n         * @returns {BoldTextResult}\n         * @constructor\n         */\n        function BoldTextResult(decoratedResult) {\n            DecoratedTextResult.call(this, decoratedResult);\n            return (this);\n        }\n\n        // Prototype extension.\n        BoldTextResult.prototype = Object.create(DecoratedTextResult.prototype);\n\n        /**\n         * @param {array} options\n         * @param {array} votes\n         */\n        BoldTextResult.prototype.renderResult = function(options, votes) {\n            var highest = util.getHighestVotedOptions(options, votes);\n            $.each(options, function(optionid) {\n                $(\"#vote-count-\" + optionid).css(\"font-weight\",\"\");\n            });\n            if (highest.length > 0) {\n                $.each(highest, function(i, optionid) {\n                    $(\"#vote-count-\" + optionid).css(\"font-weight\",\"Bold\");\n                });\n            }\n            Object.getPrototypeOf(BoldTextResult.prototype).renderResult.call(this, options, votes);\n        };\n\n        return (BoldTextResult);\n    }\n);\n"],"names":["define","$","util","DecoratedTextResult","BoldTextResult","decoratedResult","call","this","prototype","Object","create","renderResult","options","votes","highest","getHighestVotedOptions","each","optionid","css","length","i","getPrototypeOf"],"mappings":";;;;;;AAqBAA,4CAAO,CAAC,SAAU,oBAAqB,uCACnC,SAASC,EAAGC,KAAMC,8BAOLC,eAAeC,wBACpBF,oBAAoBG,KAAKC,KAAMF,iBACvBE,YAIZH,eAAeI,UAAYC,OAAOC,OAAOP,oBAAoBK,WAM7DJ,eAAeI,UAAUG,aAAe,SAASC,QAASC,WAClDC,QAAUZ,KAAKa,uBAAuBH,QAASC,OACnDZ,EAAEe,KAAKJ,SAAS,SAASK,UACrBhB,EAAE,eAAiBgB,UAAUC,IAAI,cAAc,OAE/CJ,QAAQK,OAAS,GACjBlB,EAAEe,KAAKF,SAAS,SAASM,EAAGH,UACxBhB,EAAE,eAAiBgB,UAAUC,IAAI,cAAc,WAGvDT,OAAOY,eAAejB,eAAeI,WAAWG,aAAaL,KAAKC,KAAMK,QAASC,QAG7ET"}